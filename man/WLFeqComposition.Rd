% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/weight_length_fq_composition.R
\name{WLFeqComposition}
\alias{WLFeqComposition}
\title{WLFeqComposition Class}
\value{
length frequency dataframe with dates as columns and length classes as rows

dataframe that keeps the LHT values per taxon
Generate interval and midpoint sequences for a given bidnwidth

a named list with the generated size intervals and midpoints
Generate a dataframe organised by size intervals of width 'bindwidth' and
its midpoints for each time period in the original dataframe. 'size_col' and
'weight_col' are as well added as columns.

a primitive dataframe with the initial frequency structure
Generate the length frequency dataframe that contains the number of catches per
length class

A dataframe with the number of catches at length
Generate the weight frequency dataframe that contains the mean weight of catches per
length class

size_interval_weight_df primitive dataframe with the initial length frequency structure

A dataframe with the mean weight of catches at length
}
\description{
Main class to build frequency matrices out of weight and lengths
}
\section{Super class}{
\code{\link[utpbwlfq:MixinUtilities]{utpbwlfq::MixinUtilities}} -> \code{WLFeqComposition}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{data}}{a long dataframe with the length and weight data}

\item{\code{size_col}}{name of the column that holds lengths}

\item{\code{weight_col}}{name of the column that holds weights}

\item{\code{time_col}}{name of the column that holds dates}

\item{\code{interval_col}}{name of the column that will hold the size interval (as opposed to midpoints)}

\item{\code{midpoint_col}}{name of the column that will hold the length classes}

\item{\code{freq_col}}{name of the column that will hold the the length totals per class}

\item{\code{linf}}{asymptotic length}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-WLFeqComposition-new}{\code{WLFeqComposition$new()}}
\item \href{#method-WLFeqComposition-generate_catch_at_length}{\code{WLFeqComposition$generate_catch_at_length()}}
\item \href{#method-WLFeqComposition-generate_catch_and_mean_weight_at_length}{\code{WLFeqComposition$generate_catch_and_mean_weight_at_length()}}
\item \href{#method-WLFeqComposition-clone}{\code{WLFeqComposition$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="utpbwlfq" data-topic="MixinUtilities" data-id="create_empty_dataframe"><a href='../../utpbwlfq/html/MixinUtilities.html#method-MixinUtilities-create_empty_dataframe'><code>utpbwlfq::MixinUtilities$create_empty_dataframe()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WLFeqComposition-new"></a>}}
\if{latex}{\out{\hypertarget{method-WLFeqComposition-new}{}}}
\subsection{Method \code{new()}}{
Initialise the WLFeqComposition
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WLFeqComposition$new(
  data,
  size_col,
  weight_col,
  time_col,
  interval_col,
  midpoint_col,
  freq_col,
  linf
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{a long dataframe with the length and weight data}

\item{\code{size_col}}{name of the column that holds lengths}

\item{\code{weight_col}}{name of the column that holds weights}

\item{\code{time_col}}{name of the column that holds dates}

\item{\code{interval_col}}{name of the column that will hold the size interval
(as opposed to midpoints)}

\item{\code{midpoint_col}}{name of the column that will hold the length classes}

\item{\code{freq_col}}{name of the column that will hold the the length totals per class}

\item{\code{linf}}{asymptotic length}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WLFeqComposition-generate_catch_at_length"></a>}}
\if{latex}{\out{\hypertarget{method-WLFeqComposition-generate_catch_at_length}{}}}
\subsection{Method \code{generate_catch_at_length()}}{
Generate the number of catches at length dataframe, starting from the minimum
length class - min_padding and by capping the maximum length class to linf, if
up_to_inf is set to TRUE
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WLFeqComposition$generate_catch_at_length(
  bindwidth,
  min_padding,
  up_to_linf = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{bindwidth}}{size of each length class}

\item{\code{min_padding}}{padding that is substracted to the minimum length class}

\item{\code{up_to_linf}}{boolean flag indicating whether the length classed should be capped}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WLFeqComposition-generate_catch_and_mean_weight_at_length"></a>}}
\if{latex}{\out{\hypertarget{method-WLFeqComposition-generate_catch_and_mean_weight_at_length}{}}}
\subsection{Method \code{generate_catch_and_mean_weight_at_length()}}{
Generate the number of catches and mean weight at length dataframe,
starting from the minimum length class - min_padding and by capping the maximum
length class to linf, if up_to_inf is set to TRUE
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WLFeqComposition$generate_catch_and_mean_weight_at_length(
  bindwidth,
  weight_na_as = 0,
  min_padding,
  up_to_linf = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{bindwidth}}{size of each length class}

\item{\code{weight_na_as}}{value to replace NA for weights}

\item{\code{min_padding}}{padding that is substracted to the minimum length class}

\item{\code{up_to_linf}}{boolean flag indicating whether the length classed should be capped}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WLFeqComposition-clone"></a>}}
\if{latex}{\out{\hypertarget{method-WLFeqComposition-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WLFeqComposition$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
